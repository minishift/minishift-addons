{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "openshift.io/display-name": "Eclipse Che Server 5.x",
            "description": "Application template to deploy Eclipse Che servers",
            "iconClass": "icon-che",
            "tags": "IDE,eclipse,che",
            "version": "1.0"
        },
        "name": "che-server-single-user"
    },
    "labels": {},
    "parameters": [
        {
            "displayName": "Domain Name",
            "description": "The domain name to use with the project, its usually combination of $(minishift ip).nip.io e.g. 192.168.64.10.nip.io",
            "name": "DOMAIN_NAME",
            "value": "",
            "required": true
        },
        {
            "displayName": "Che Image Tag",
            "description": "The docker image tag to be used for che, available are latest (5.18.0-centos), nightly(5.19.0-SNAPSHOT)",
            "name": "IMAGE_TAG",
            "value": "latest",
            "required": false
        },
        {
            "displayName": "GitHub Client Id",
            "description": "The GitHub Client Id that can be used with GitHub oAuth2",
            "name": "CHE_OAUTH_GITHUB_CLIENTID",
            "value": "",
            "required": false
        },
        {
            "displayName": "GitHub Client Secret",
            "description": "The GitHub Client Secret that can be used with GitHub oAuth2",
            "name": "CHE_OAUTH_GITHUB_CLIENTSECRET",
            "value": "",
            "required": false
        },
        {
            "displayName": "Che Server Debugging Enabled",
            "description": "Che Server Debugging Enabled",
            "name": "CHE_DEBUGGING_ENABLED",
            "value": "false",
            "required": false
        },
        {
            "displayName": "ImageStream Namespace",
            "description": "Namespace in which the ImageStreams for Che Server images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "name": "IMAGE_STREAM_NAMESPACE",
            "value": "openshift",
            "required": true
        }
    ],
    "objects": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "name": "che"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {},
                "name": "che-host",
                "labels": {
                    "application": "che"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "che"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
                "labels": {},
                "name": "che-data-volume"
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "1Gi"
                    }
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
                "name": "claim-che-workspace"
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "1Gi"
                    }
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "ConfigMap",
            "metadata": {
                "labels": {},
                "name": "che"
            },
            "data": {
                "workspace-storage": "/home/user/che/workspaces",
                "workspace-storage-create-folders": "false",
                "local-conf-dir": "/data/conf",
                "openshift-serviceaccountname": "che",
                "che-server-evaluation-strategy": "docker-local-custom",
                "che.logs.dir": "/data/logs",
                "che.docker.server_evaluation_strategy.custom.template": "<serverName>-<if(isDevMachine)><workspaceIdWithoutPrefix><else><machineName><endif>-<externalAddress>",
                "che.docker.server_evaluation_strategy.custom.external.protocol": "http",
                "che.predefined.stacks.reload_on_start": "false",
                "log-level": "INFO",
                "docker-connector": "openshift",
                "port": "8080",
                "remote-debugging-enabled": "${CHE_DEBUGGING_ENABLED)",
                "che-oauth-github-forceactivation": "true",
                "workspaces-memory-limit": "1300Mi",
                "workspaces-memory-request": "1100Mi",
                "enable-workspaces-autostart": "false",
                "keycloak-disabled": "true",
                "che-server-java-opts": "-XX:+UseG1GC -XX:+UseStringDeduplication -XX:MinHeapFreeRatio=20 -XX:MaxHeapFreeRatio=40 -XX:MaxRAM=600m -Xms256m",
                "che-workspaces-java-opts": "-XX:+UseG1GC -XX:+UseStringDeduplication -XX:MinHeapFreeRatio=20 -XX:MaxHeapFreeRatio=40 -XX:MaxRAM=1200m -Xms256m",
                "che-openshift-secure-routes": "false",
                "che-secure-external-urls": "false",
                "che-server-timeout-ms": "3600000",
                "che-openshift-precreate-subpaths": "true",
                "che-workspace-auto-snapshot": "false",
                "che-oauth-github-clientid": "${CHE_OAUTH_GITHUB_CLIENTID}",
                "che-oauth-github-clientsecret": "${CHE_OAUTH_GITHUB_CLIENTSECRET}"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "annotations": {},
                "labels": {
                    "application": "che"
                },
                "name": "che"
            },
            "spec": {
                "replicas": 1,
                "revisionHistoryLimit": 2,
                "selector": {
                    "deploymentConfig": "che"
                },
                "strategy": {
                    "rollingParams": {
                        "maxSurge": 0
                    },
                    "type": "Rolling"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "che"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "${IMAGE_STREAM_NAMESPACE}",
                                "name": "che-server:${IMAGE_TAG}"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "template": {
                    "metadata": {
                        "annotations": {},
                        "labels": {
                            "application": "che",
                            "deploymentConfig": "che"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "containers": [
                            {
                                "image": "che-server",
                                "imagePullPolicy": "Always",
                                "name": "che",
                                "env": [
                                    {
                                        "name": "CHE_DOCKER_IP_EXTERNAL",
                                        "value": "${CHE_OPENSHIFT_PROJECT}-${DOMAIN_NAME}"
                                    },
                                    {
                                        "name": "CHE_WORKSPACE_STORAGE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "workspace-storage",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_LOGS_DIR",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che.logs.dir",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_WORKSPACE_STORAGE_CREATE_FOLDERS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "workspace-storage-create-folders",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_LOCAL_CONF_DIR",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "local-conf-dir",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_OPENSHIFT_PROJECT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_OPENSHIFT_SERVICEACCOUNTNAME",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "openshift-serviceaccountname",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_DOCKER_SERVER__EVALUATION__STRATEGY",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che-server-evaluation-strategy",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_DOCKER_SERVER__EVALUATION__STRATEGY_CUSTOM_TEMPLATE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che.docker.server_evaluation_strategy.custom.template",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_DOCKER_SERVER__EVALUATION__STRATEGY_CUSTOM_EXTERNAL_PROTOCOL",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che.docker.server_evaluation_strategy.custom.external.protocol",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_PREDEFINED_STACKS_RELOAD__ON__START",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che.predefined.stacks.reload_on_start",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_LOG_LEVEL",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "log-level",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_PORT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "port",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_DOCKER_CONNECTOR",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "docker-connector",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_DEBUG_SERVER",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "remote-debugging-enabled",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_OAUTH_GITHUB_FORCEACTIVATION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che-oauth-github-forceactivation",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_OAUTH_GITHUB_CLIENTID",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che-oauth-github-clientid",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_OAUTH_GITHUB_CLIENTSECRET",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che-oauth-github-clientsecret",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_OPENSHIFT_WORKSPACE_MEMORY_OVERRIDE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "workspaces-memory-limit",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_OPENSHIFT_WORKSPACE_MEMORY_REQUEST",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "workspaces-memory-request",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_WORKSPACE_AUTO__START",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "enable-workspaces-autostart",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JAVA_OPTS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che-server-java-opts",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_WORKSPACE_JAVA_OPTIONS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che-workspaces-java-opts",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_OPENSHIFT_SECURE_ROUTES",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che-openshift-secure-routes",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_DOCKER_SERVER__EVALUATION__STRATEGY_SECURE_EXTERNAL_URLS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che-secure-external-urls",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_OPENSHIFT_SERVER_INACTIVE_STOP_TIMEOUT_MS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che-server-timeout-ms",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_OPENSHIFT_PRECREATE_WORKSPACE_DIRS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che-openshift-precreate-subpaths",
                                                "name": "che"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHE_KEYCLOAK_DISABLED",
                                        "value": "true"
                                    },
                                    {
                                        "name": "CHE_WORKSPACE_AUTO__SNAPSHOT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "che-workspace-auto-snapshot",
                                                "name": "che"
                                            }
                                        }
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/api/system/state",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "timeoutSeconds": 10
                                },
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "http"
                                    },
                                    {
                                        "containerPort": 8000,
                                        "name": "http-debug"
                                    }
                                ],
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/api/system/state",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "timeoutSeconds": 60
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "600Mi"
                                    },
                                    "requests": {
                                        "memory": "256Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "mountPath": "/data",
                                        "name": "che-data-volume"
                                    }
                                ]
                            }
                        ],
                        "serviceAccountName": "che",
                        "volumes": [
                            {
                                "name": "che-data-volume",
                                "persistentVolumeClaim": {
                                    "claimName": "che-data-volume"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Route",
            "metadata": {
                "labels": {
                    "application": "che"
                },
                "annotations": {
                    "description": "Route for application's http service."
                },
                "name": "che"
            },
            "spec": {
                "to": {
                    "kind": "Service",
                    "name": "che-host"
                }
            }
        }
    ]
}