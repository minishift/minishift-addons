# Name: helm
# Description: Installs helm

# Pull the image
docker pull lachlanevenson/k8s-helm:v2.8.1

# Deploy helm
docker run --rm -v /home/docker:/root:z -v /var/lib/minishift/openshift.local.config:/var/lib/minishift/openshift.local.config:z --net=host --env KUBECONFIG=/var/lib/minishift/openshift.local.config/master/admin.kubeconfig --env HELM_HOST=localhost:8443 lachlanevenson/k8s-helm:v2.8.1 init

# Create serviceaccounts and add the permissions to it. Then make the deployment use it
oc create serviceaccount helm -n kube-system
oc patch deployment/tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccountName":"helm"}}}}' -n kube-system
oc adm policy add-cluster-role-to-user cluster-admin -z helm -n kube-system

# Expose helm as nodePort
oc expose deployment/tiller-deploy --target-port=tiller --type=NodePort --name=tiller -n kube-system

# Output
echo Add into your ~/.bashrc this lines:
echo
echo   eval "$(minishift oc-env)"
echo   export HELM_HOST="$(minishift ip):$(oc get svc/tiller -o jsonpath='{.spec.ports[0].nodePort}' -n kube-system --as=system:admin)"
echo   export MINISHIFT_ADMIN_CONTEXT="default/$(oc config view -o jsonpath='{.contexts[?(@.name=="minishift")].context.cluster}')/system:admin"
echo
echo Initialize the helm client, if not done already
echo
echo e.g.
echo   helm init -c
echo
echo Search for an application:
echo
echo e.g.
echo   helm search
echo
echo And now deploy an application
echo
echo e.g.
echo   helm version
echo
echo To delete helm tiller
echo   oc delete sa/helm deployment/tiller-deploy svc/tiller -n kube-system --as=system:admin
